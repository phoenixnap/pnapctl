name: Build workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container: golang:1.19
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Go Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: make build
  
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    container: golang:1.19
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Go Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run tests
        run: make test-coverage
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results
          path: 'out/unit-tests/*'

  component-tests:
    name: Component Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install bats
        run: npm install -g bats
      - name: Go Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run tests
        run: make component-tests
      - name: Upload Component Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Component Test Results
          path: 'out/component-tests/*'

  publish-test-results:
    name: Publish Test Results
    needs:
      - unit-tests
      - component-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: test-results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test-results/**/*.xml
          check_name: "Test Results"
