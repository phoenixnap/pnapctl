// Code generated by MockGen. DO NOT EDIT.
// Source: common/client/payments/client.go

// Package sdkmocks is a generated GoMock package.
package sdkmocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	paymentsapi "github.com/phoenixnap/go-sdk-bmc/paymentsapi"
)

// MockPaymentApiSdkClient is a mock of PaymentApiSdkClient interface.
type MockPaymentApiSdkClient struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentApiSdkClientMockRecorder
}

// MockPaymentApiSdkClientMockRecorder is the mock recorder for MockPaymentApiSdkClient.
type MockPaymentApiSdkClientMockRecorder struct {
	mock *MockPaymentApiSdkClient
}

// NewMockPaymentApiSdkClient creates a new mock instance.
func NewMockPaymentApiSdkClient(ctrl *gomock.Controller) *MockPaymentApiSdkClient {
	mock := &MockPaymentApiSdkClient{ctrl: ctrl}
	mock.recorder = &MockPaymentApiSdkClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentApiSdkClient) EXPECT() *MockPaymentApiSdkClientMockRecorder {
	return m.recorder
}

// TransactionGetById mocks base method.
func (m *MockPaymentApiSdkClient) TransactionGetById(transactionId string) (*paymentsapi.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransactionGetById", transactionId)
	ret0, _ := ret[0].(*paymentsapi.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TransactionGetById indicates an expected call of TransactionGetById.
func (mr *MockPaymentApiSdkClientMockRecorder) TransactionGetById(transactionId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransactionGetById", reflect.TypeOf((*MockPaymentApiSdkClient)(nil).TransactionGetById), transactionId)
}

// TransactionsGet mocks base method.
func (m *MockPaymentApiSdkClient) TransactionsGet(limit, offset int, sortDirection, sortField, from, to string) (*paymentsapi.PaginatedTransactions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransactionsGet", limit, offset, sortDirection, sortField, from, to)
	ret0, _ := ret[0].(*paymentsapi.PaginatedTransactions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TransactionsGet indicates an expected call of TransactionsGet.
func (mr *MockPaymentApiSdkClientMockRecorder) TransactionsGet(limit, offset, sortDirection, sortField, from, to interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransactionsGet", reflect.TypeOf((*MockPaymentApiSdkClient)(nil).TransactionsGet), limit, offset, sortDirection, sortField, from, to)
}
