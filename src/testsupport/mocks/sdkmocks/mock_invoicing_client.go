// Code generated by MockGen. DO NOT EDIT.
// Source: common/client/invoicing/client.go

// Package sdkmocks is a generated GoMock package.
package sdkmocks

import (
	os "os"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	invoicingapi "github.com/phoenixnap/go-sdk-bmc/invoicingapi"
)

// MockInvoicingSdkClient is a mock of InvoicingSdkClient interface.
type MockInvoicingSdkClient struct {
	ctrl     *gomock.Controller
	recorder *MockInvoicingSdkClientMockRecorder
}

// MockInvoicingSdkClientMockRecorder is the mock recorder for MockInvoicingSdkClient.
type MockInvoicingSdkClientMockRecorder struct {
	mock *MockInvoicingSdkClient
}

// NewMockInvoicingSdkClient creates a new mock instance.
func NewMockInvoicingSdkClient(ctrl *gomock.Controller) *MockInvoicingSdkClient {
	mock := &MockInvoicingSdkClient{ctrl: ctrl}
	mock.recorder = &MockInvoicingSdkClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInvoicingSdkClient) EXPECT() *MockInvoicingSdkClientMockRecorder {
	return m.recorder
}

// InvoicesGet mocks base method.
func (m *MockInvoicingSdkClient) InvoicesGet(number, status, sentOnFrom, sentOnTo string, limit, offset int, sortField, sortDirection string) (*invoicingapi.PaginatedInvoices, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InvoicesGet", number, status, sentOnFrom, sentOnTo, limit, offset, sortField, sortDirection)
	ret0, _ := ret[0].(*invoicingapi.PaginatedInvoices)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InvoicesGet indicates an expected call of InvoicesGet.
func (mr *MockInvoicingSdkClientMockRecorder) InvoicesGet(number, status, sentOnFrom, sentOnTo, limit, offset, sortField, sortDirection interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InvoicesGet", reflect.TypeOf((*MockInvoicingSdkClient)(nil).InvoicesGet), number, status, sentOnFrom, sentOnTo, limit, offset, sortField, sortDirection)
}

// InvoicesInvoiceIdGeneratePdfPost mocks base method.
func (m *MockInvoicingSdkClient) InvoicesInvoiceIdGeneratePdfPost(invoiceId string) (*os.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InvoicesInvoiceIdGeneratePdfPost", invoiceId)
	ret0, _ := ret[0].(*os.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InvoicesInvoiceIdGeneratePdfPost indicates an expected call of InvoicesInvoiceIdGeneratePdfPost.
func (mr *MockInvoicingSdkClientMockRecorder) InvoicesInvoiceIdGeneratePdfPost(invoiceId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InvoicesInvoiceIdGeneratePdfPost", reflect.TypeOf((*MockInvoicingSdkClient)(nil).InvoicesInvoiceIdGeneratePdfPost), invoiceId)
}

// InvoicesInvoiceIdGet mocks base method.
func (m *MockInvoicingSdkClient) InvoicesInvoiceIdGet(invoiceId string) (*invoicingapi.Invoice, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InvoicesInvoiceIdGet", invoiceId)
	ret0, _ := ret[0].(*invoicingapi.Invoice)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InvoicesInvoiceIdGet indicates an expected call of InvoicesInvoiceIdGet.
func (mr *MockInvoicingSdkClientMockRecorder) InvoicesInvoiceIdGet(invoiceId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InvoicesInvoiceIdGet", reflect.TypeOf((*MockInvoicingSdkClient)(nil).InvoicesInvoiceIdGet), invoiceId)
}

// InvoicesInvoiceIdPayPost mocks base method.
func (m *MockInvoicingSdkClient) InvoicesInvoiceIdPayPost(invoiceId string) (map[string]interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InvoicesInvoiceIdPayPost", invoiceId)
	ret0, _ := ret[0].(map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InvoicesInvoiceIdPayPost indicates an expected call of InvoicesInvoiceIdPayPost.
func (mr *MockInvoicingSdkClientMockRecorder) InvoicesInvoiceIdPayPost(invoiceId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InvoicesInvoiceIdPayPost", reflect.TypeOf((*MockInvoicingSdkClient)(nil).InvoicesInvoiceIdPayPost), invoiceId)
}
